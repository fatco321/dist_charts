{"version":3,"file":"index-CLQcESi6.js","sources":["../src/components/Button.vue","../src/components/Diagramm.vue","../src/components/Popup.vue","../src/components/Table.vue","../src/App.vue","../src/main.js"],"sourcesContent":["<script setup></script>\n\n<template>\n    <button><slot></slot></button>\n</template>\n\n<style scoped>\nbutton {\n    font-size: 1.5rem;\n    padding: 6px 15px;\n    font-weight: 900;\n    background-color: #007aff;\n    color: #fafafa;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: scale 0.5s;\n}\n\nbutton:hover {\n    scale: 1.1;\n}\n</style>\n","<script setup>\nimport { use } from 'echarts/core'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { PieChart } from 'echarts/charts'\nimport {\n    TitleComponent,\n    TooltipComponent,\n    LegendComponent,\n} from 'echarts/components'\nimport VChart, { THEME_KEY } from 'vue-echarts'\nimport { ref, provide, onMounted, nextTick, computed } from 'vue'\nimport { color } from 'echarts'\nimport Button from './Button.vue'\n\nconst props = defineProps(['data'])\n\nconst targetArr = ref([\n    {\n        name: 'СОУТ',\n        targetValue: 300000,\n    },\n    {\n        name: 'Обучение',\n        targetValue: 1800000,\n    },\n    {\n        name: 'Закупка СИЗ',\n        targetValue: 1000000,\n    },\n    {\n        name: 'Модернизация мест отдыха работников',\n        targetValue: 750000,\n    },\n    {\n        name: 'Закупка агитационных плакатов',\n        targetValue: 124000,\n    },\n    {\n        name: 'Закупка знаков безопасности',\n        targetValue: 26000,\n    },\n])\n\nuse([\n    CanvasRenderer,\n    PieChart,\n    TitleComponent,\n    TooltipComponent,\n    LegendComponent,\n])\n\nprovide(THEME_KEY, 'dark')\n\nconst option = ref(null)\n\n// Функция для определения цвета на основе значения и targetValue\nconst getColorByValue = (value, targetValue, name) => {\n    if (name === 'СОУТ' && value > targetValue) {\n        return '#e74c3c' // Красный\n    } else if (value === targetValue) {\n        return '#2ecc71' // Зеленый\n    } else if (value > targetValue * 0.5 && value < targetValue * 0.99) {\n        return '#f39c12' // Оранжевый\n    } else if (value > targetValue) {\n        return '#e74c3c' // Красный\n    } else if (value < targetValue * 0.5) {\n        return '#e74c3c' // Красный\n    } else {\n        return '#e74c3c' // Красный (по умолчанию)\n    }\n}\n\n// Функция для определения текста всплывающей подсказки на основе цвета и значения\nconst getTooltipTextByColorAndValue = (value, targetValue, name) => {\n    if (name === 'СОУТ' && value > targetValue) {\n        return 'Вы заложили на мероприятие слишком много денег.<br> Обратите внимание, что часть сотрудников примут только 1 сентября 2025 года,<br> а на проведение СОУТ у вас есть 12 месяцев с момента приема на работу. <br>Поэтому часть рабочих мест можно оценить в следующем году.'\n    } else if (value === targetValue) {\n        return 'Бюджет спланирован верно'\n    } else if (value >= targetValue * 0.5 && value <= targetValue * 0.99) {\n        return 'Вы не до конца освоили бюджет на мероприятие'\n    } else if (value > targetValue) {\n        return 'Вы заложили на мероприятие слишком много денег'\n    } else if (value <= targetValue * 0.5) {\n        return 'Вы заложили на мероприятие слишком мало денег'\n    } else {\n        return 'Неизвестный сектор'\n    }\n}\n\n// Функция для форматирования числа с разделителями тысяч\nconst formatNumber = (value) => {\n    return new Intl.NumberFormat('ru-RU').format(value)\n}\n\nconst restart = () => {\n    location.reload()\n}\n\nconst isShowAlert = computed(() => {\n    return Object.values(props.data).some((value) => value === 0)\n})\n\nconst emptyArr = computed(() => {\n    const data = [\n        { value: props.data.sout, name: 'СОУТ' },\n        { value: props.data.training, name: 'Обучение' },\n        { value: props.data.equipment, name: 'Закупку СИЗ' },\n        {\n            value: props.data.restArea,\n            name: 'Модернизацию мест отдыха работников',\n        },\n        {\n            value: props.data.posters,\n            name: 'Закупку агитационных плакатов',\n        },\n        { value: props.data.signs, name: 'Закупку знаков безопасности' },\n    ]\n    return data.filter((item) => item.value === 0)\n})\n\nonMounted(() => {\n    nextTick(() => {\n        const data = [\n            { value: props.data.sout, name: 'СОУТ' },\n            { value: props.data.training, name: 'Обучение' },\n            { value: props.data.equipment, name: 'Закупка СИЗ' },\n            {\n                value: props.data.restArea,\n                name: 'Модернизация мест отдыха работников',\n            },\n            {\n                value: props.data.posters,\n                name: 'Закупка агитационных плакатов',\n            },\n            { value: props.data.signs, name: 'Закупка знаков безопасности' },\n        ].filter((item) => item.value > 0) // Фильтруем данные, чтобы убрать сектора с нулевым значением\n\n        data.forEach((item) => {\n            const target = targetArr.value.find((t) => t.name === item.name)\n            if (target) {\n                item.itemStyle = {\n                    color: getColorByValue(\n                        item.value,\n                        target.targetValue,\n                        item.name,\n                    ),\n                }\n            }\n        })\n\n        option.value = {\n            backgroundColor: 'transparent',\n            title: {\n                text: 'Затраты',\n                subtext:\n                    'Вы распределили бюджет. Наводите на каждый сектор, чтобы увидеть пояснения',\n                left: 'center',\n                textStyle: {\n                    color: 'black',\n                    fontSize: '1.5rem',\n                },\n                subtextStyle: {\n                    color: 'black',\n                    fontSize: '1.1rem',\n                },\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: function (params) {\n                    const target = targetArr.value.find(\n                        (t) => t.name === params.name,\n                    )\n                    if (target) {\n                        return getTooltipTextByColorAndValue(\n                            params.value,\n                            target.targetValue,\n                            params.name,\n                        )\n                    }\n                    return 'Неизвестный сектор'\n                },\n                textStyle: {\n                    fontSize: 14, // Уменьшаем размер шрифта для всплывающей подсказки\n                },\n                position: function (point, params, dom, rect, size) {\n                    // Автоматически позиционируем всплывающую подсказку, чтобы она не выходила за пределы экрана\n                    const obj = { top: '35%' }\n                    obj[['left', 'right'][+(point[0] < size.viewSize[0] / 2)]] =\n                        '10%'\n                    return obj\n                },\n            },\n            series: [\n                {\n                    name: 'Затраты',\n                    type: 'pie',\n                    radius: '55%',\n                    center: ['50%', '55%'],\n                    data: data,\n                    label: {\n                        show: true, // Включаем отображение меток\n                        position: 'outside', // Позиция меток снаружи сектора\n                        rotate: false, // Поворачиваем метки относительно сектора\n                        formatter: function (params) {\n                            const formattedValue = formatNumber(params.value)\n                            const nameParts = params.name.split(' ')\n                            const nameLines = []\n                            let currentLine = ''\n\n                            nameParts.forEach((part, index) => {\n                                if (\n                                    currentLine.length + part.length + 1 <=\n                                    20\n                                ) {\n                                    currentLine +=\n                                        (currentLine ? ' ' : '') + part\n                                } else {\n                                    nameLines.push(currentLine)\n                                    currentLine = part\n                                }\n\n                                if (index === nameParts.length - 1) {\n                                    nameLines.push(currentLine)\n                                }\n                            })\n\n                            return `${nameLines.join(\n                                '\\n',\n                            )}\\n${formattedValue} руб` // Разделяем текст на строки по пробелам и добавляем значение\n                        },\n                        color: '#000', // Цвет текста меток\n                        align: 'center', // Центрирование текста по горизонтали\n                        verticalAlign: 'middle', // Центрирование текста по вертикали\n                        lineHeight: 16, // Устанавливаем межстрочный интервал для более читабельного текста\n                        fontSize: 11,\n                        rich: {\n                            normal: {\n                                fontSize: 12,\n                                lineHeight: 16,\n                            },\n                        },\n                    },\n                    labelLine: {\n                        show: true, // Показываем линии меток\n                        length: 60, // Уменьшаем длину линий меток\n                        length2: 20, // Увеличиваем длину второй части линий меток\n                        smooth: 0.2, // Делаем линии меток более плавными\n                    },\n                    itemStyle: {\n                        borderColor: '#fff', // Цвет границ (белый)\n                        borderWidth: 3, // Толщина границ\n                    },\n                    emphasis: {\n                        itemStyle: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 1,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)',\n                        },\n                    },\n                },\n            ],\n        }\n    })\n})\n</script>\n\n<template>\n    <v-chart class=\"chart\" :option=\"option\" autoresize />\n\n    <div class=\"container__alert\" v-if=\"isShowAlert\">\n        <h3>\n            Обратите внимание, вы не распределили бюджет на\n            <span v-for=\"item in emptyArr\">{{ item.name }}, </span> которые\n            нужно провести в 2025 году. Пройдите задание еще раз, чтобы\n            распределить весь бюджет.\n        </h3>\n    </div>\n\n    <div class=\"container_btn\">\n        <Button @click=\"restart\">Попробовать еще раз</Button>\n    </div>\n</template>\n\n<style scoped>\n.chart {\n    height: 95vw;\n}\n\n.container_btn {\n    display: flex;\n    justify-content: center;\n}\n\n.container__alert {\n    margin-bottom: 20px;\n    text-align: justify;\n    display: flex;\n    justify-content: center;\n}\n.container__alert h3 {\n    border-radius: 20px;\n    max-width: 95vw;\n    font-size: 1.3rem;\n    color: black;\n    padding: 10px;\n    hyphens: auto;\n}\n\n.container__alert span {\n    font-size: 1.3rem;\n    font-weight: 900;\n}\n</style>\n","<script setup>\nconst emit = defineEmits(['start'])\n\nconst start = () => {\n    emit('start')\n}\n</script>\n\n<template>\n    <div class=\"container\">\n        <h2>Выполните задание</h2>\n        <p>\n            Распределите бюджет и вводите суммы в ячейки в рублях без\n            сокращений. Например, «300 000».\n        </p>\n        <div class=\"container_bnt\">\n            <button @click=\"start\">OK</button>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n.container {\n    border: 5px solid black;\n    width: 40vw;\n    max-height: 30vw;\n    padding: 10px;\n    background-color: #fafafa;\n    border-radius: 10px;\n}\n\nh2 {\n    text-align: center;\n    font-size: 1.6rem;\n}\n\np {\n    margin-top: 5px;\n    font-size: 1.3rem;\n    text-align: justify;\n}\n\n.container_bnt {\n    margin-top: 3vw;\n    display: flex;\n    justify-content: center;\n}\n\n.container_bnt button {\n    padding: 2.5px 10px;\n    cursor: pointer;\n    font-weight: 900;\n    font-size: 1.3rem;\n}\n</style>\n","<script setup>\nimport { ref, computed } from 'vue'\nimport Button from './Button.vue'\n\n// Определяем события, которые будут отправляться в родителя\nconst emit = defineEmits(['update-expenses'])\n\n// Инициализируем общий бюджет\nconst initialBudget = 4000000\nconst total = ref(initialBudget)\n\n// Инициализируем значения для каждой категории затрат\nconst expenses = ref({\n    sout: 0,\n    training: 0,\n    equipment: 0,\n    restArea: 0,\n    posters: 0,\n    signs: 0,\n})\n\n// Вычисляем сумму всех затрат\nconst totalSpent = computed(() =>\n    Object.values(expenses.value).reduce((sum, value) => sum + value, 0),\n)\n\n// Вычисляем оставшийся бюджет\nconst remainingTotal = computed(() => total.value - totalSpent.value)\n\n// Вычисляем, показывать ли кнопку \"Проверить\"\nconst isShowCheck = computed(() =>\n    Object.values(expenses.value).some((value) => value > 0),\n)\n\n// Функция для обработки изменения значений input\nfunction handleInputChange(category, event) {\n    let inputValue = event.target.value.replace(/\\s+/g, '') // Убираем пробелы для корректного преобразования\n\n    // Преобразуем значение в число, при необходимости убираем знак \"-\"\n    inputValue = Math.abs(parseFloat(inputValue)) || 0\n\n    // Ограничиваем значение, чтобы оно не превышало остаток бюджета + текущее значение\n    const validValue = Math.min(\n        inputValue,\n        remainingTotal.value + expenses.value[category],\n    )\n    expenses.value[category] = validValue\n\n    // Обновляем форматированное значение в input\n    event.target.value = new Intl.NumberFormat('ru-RU').format(validValue)\n}\n\n// Функция для отправки данных в родительский компонент при нажатии на кнопку\nfunction submitExpenses() {\n    emit('update-expenses', { ...expenses.value })\n}\n</script>\n\n<template>\n    <div class=\"container\">\n        <div class=\"container__total\">\n            Бюджет :\n            {{ new Intl.NumberFormat('ru-RU').format(remainingTotal) }} руб.\n        </div>\n        <div class=\"container__table\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Мероприятия</th>\n                        <th>Затраты</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>СОУТ</td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.sout,\n                                    )\n                                \"\n                                @input=\"handleInputChange('sout', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"table__title\">Обучение</td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.training,\n                                    )\n                                \"\n                                @input=\"handleInputChange('training', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"table__title\">Закупка СИЗ</td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.equipment,\n                                    )\n                                \"\n                                @input=\"handleInputChange('equipment', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"table__title\">\n                            Модернизация мест отдыха работников\n                        </td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.restArea,\n                                    )\n                                \"\n                                @input=\"handleInputChange('restArea', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"table__title\">\n                            Закупка агитационных плакатов\n                        </td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.posters,\n                                    )\n                                \"\n                                @input=\"handleInputChange('posters', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class=\"table__title\">\n                            Закупка знаков безопасности\n                        </td>\n                        <td>\n                            <input\n                                class=\"input\"\n                                type=\"text\"\n                                :value=\"\n                                    new Intl.NumberFormat('ru-RU').format(\n                                        expenses.signs,\n                                    )\n                                \"\n                                @input=\"handleInputChange('signs', $event)\"\n                            />\n                            рублей\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div v-if=\"isShowCheck\" class=\"container_btn\">\n            <Button @click=\"submitExpenses\">Проверить</Button>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n/* Стили для таблицы и кнопки */\n.container__total {\n    display: flex;\n    justify-content: end;\n    margin: 10px;\n    font-size: 1.4rem;\n    font-weight: 900;\n}\n\n.container__table {\n    font-size: 1.4rem;\n    margin: 10px;\n}\n\n.table {\n    width: 100%;\n    margin-bottom: 20px;\n    border: 1px solid #dddddd;\n    border-collapse: collapse;\n}\n.table th {\n    font-weight: bold;\n    padding: 5px;\n    background: #efefef;\n    border: 2px solid #dddddd;\n    font-size: 1.4rem;\n}\n.table td {\n    border: 2px solid #dddddd;\n    padding: 5px;\n    font-size: 1.2rem;\n}\n\n.table__title {\n    width: 60%;\n}\n\n.input {\n    max-width: 35%;\n    font-size: 1.2rem;\n}\n\n.container_btn {\n    display: flex;\n    justify-content: center;\n}\n\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 1.2rem;\n}\n\nbutton:hover {\n    background-color: #0056b3;\n}\n</style>\n","<script setup>\nimport { ref } from 'vue'\nimport Diagramm from './components/Diagramm.vue'\nimport Popup from './components/Popup.vue'\nimport Table from './components/Table.vue'\n\nconst isShowDiagramm = ref(false)\nconst isShowPopup = ref(true)\nconst isShowTable = ref(true)\n\n// Храним данные расходов, которые приходят от Table\nconst expensesData = ref({})\n\n// Функция для скрытия Popup\nconst hidePopup = () => {\n    isShowPopup.value = false\n}\n\n// Функция для обновления данных расходов, полученных из Table\nconst updateExpenses = (expenses) => {\n    expensesData.value = expenses\n    // Теперь можно показать диаграмму, если нужно\n    isShowDiagramm.value = true\n    isShowTable.value = false\n}\n</script>\n\n<template>\n    <div class=\"container\">\n        <div v-if=\"isShowPopup\" class=\"container_popup\">\n            <Popup @start=\"hidePopup\"></Popup>\n        </div>\n        <div v-if=\"isShowTable\" class=\"container_table\">\n            <Table @update-expenses=\"updateExpenses\"></Table>\n        </div>\n        <div class=\"container_diagram\" v-if=\"isShowDiagramm\">\n            <Diagramm :data=\"expensesData\"></Diagramm>\n        </div>\n    </div>\n    <footer></footer>\n</template>\n\n<style scoped>\n.container {\n    position: relative;\n}\n\n.container_popup {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-color: rgba(105, 105, 105, 0.2);\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content: center;\n    z-index: 10;\n}\n\n.container_table {\n    position: relative;\n    z-index: 1;\n}\n\n.container_diagram {\n    position: relative;\n    z-index: 1;\n}\n\nfooter {\n    height: 30px;\n}\n</style>\n","import { createApp } from 'vue'\nimport './style.css'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n"],"names":["_cache","_openBlock","_createElementBlock","props","__props","targetArr","ref","use","CanvasRenderer","PieChart","TitleComponent","TooltipComponent","LegendComponent","provide","THEME_KEY","option","getColorByValue","value","targetValue","name","getTooltipTextByColorAndValue","formatNumber","restart","isShowAlert","computed","emptyArr","item","onMounted","nextTick","data","target","t","params","point","dom","rect","size","obj","formattedValue","nameParts","nameLines","currentLine","part","index","emit","__emit","start","initialBudget","total","expenses","totalSpent","sum","remainingTotal","isShowCheck","handleInputChange","category","event","inputValue","validValue","submitExpenses","isShowDiagramm","isShowPopup","isShowTable","expensesData","hidePopup","updateExpenses","createApp","App"],"mappings":"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"}